<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Books on rusnasonov</title>
    <link>https://rusnasonov.github.io/blog/categories/books/</link>
    <description>Recent content in Books on rusnasonov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru,en</language>
    <lastBuildDate>Tue, 09 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://rusnasonov.github.io/blog/categories/books/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Джедайские техники</title>
      <link>https://rusnasonov.github.io/blog/books/dzhedajskie_tehniki/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://rusnasonov.github.io/blog/books/dzhedajskie_tehniki/</guid>
      <description>Хорошая книга, автор исследовал вопрос личной эффективности под разными углами, и объединил множество идей других исследователей. Основной посыл книги в том, что нужный инструмент необходимо подобрать под себя. Есть много полезных советов, каких трудностей стоит боятся, а каких нет.</description>
    </item>
    
    <item>
      <title>Рефакторинг</title>
      <link>https://rusnasonov.github.io/blog/books/refactoring/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://rusnasonov.github.io/blog/books/refactoring/</guid>
      <description>Цитаты:  Это напоминает мне высказывание Кента Бека, которое он часто повторяет: «Я не считаю себя замечательным программистом. Я просто хороший программист с замечательными привычками». Рефакторинг очень помогает мне писать надежный код. Делая что-то в первый раз, вы просто это делаете. Делая что-то аналогичное во второй раз, вы морщитесь от необходимости повторения, но все-таки повторяете то же самое. Делая что-то похожее в третий раз, вы начинаете рефакторинг.  Основные моменты: * Рефакторинг помогает найти ошибки * Рефакторинг позволяет быстрее писать программы * Применяйте рефакторинг при добавлении новой функции * Применяйте рефакторинг, если требуется исправить ошибку * Применяйте рефакторинг при разборе кода</description>
    </item>
    
    <item>
      <title>Паттерны проектирования</title>
      <link>https://rusnasonov.github.io/blog/books/design_patterns/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://rusnasonov.github.io/blog/books/design_patterns/</guid>
      <description>Книга является вводной в паттерны проектирования программного обеспечения. В ней достаточно интересно, и просто изложен материал. Читается просто. На мой взгляд проще, чем книга &amp;ldquo;банды четырех&amp;rdquo;. Каждый паттерн разбирается на примере. Книга предназначена для новичков.</description>
    </item>
    
  </channel>
</rss>